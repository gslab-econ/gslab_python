.-
help for ^save_data^
.-

Syntax
-----------------------------------------------------------------------

	save_data filename [if], key(varlist) [outsheet log_replace log(filename)]

Description
-----------------------------------------------------------------------

Custom version of Stata's save command that requires
the user to specify a key for the file. The command confirms
that the key is valid, places the keys at the top of the
variable list, and sort the file by its key.

Options
-----------------------------------------------------------------------

[if]: Allows an expression to determine which observations are saved.

key(): Defines key to dataset. Must be non-missing and 
    jointly unique.

outsheet: Indicates that the data should be saved as a delimitted
    text file using outsheet rather than as a dta file using save.

log_replace: Indicates that the log from this operation should overwrite any old logs 
	from save_data. If this option is not specified, the new log will be appended to the old ones.

log(): Gives the name of the file to output file manifest
    information to. Default is the same folder as the filename if 
    filename is stored in /output or in a subfolder of /output (otherwise
    it isn't stored at all).  Default name for log is data_file_maniftest.log.
    To omit logging, specify log(none).

save_data takes all valid options for Stata's native save command
    (when the outsheet option is not specified) or for Stata's outsheet
    command (when the outsheed option is specified).    

Examples
-----------------------------------------------------------------------

    save_data ../output/temp.dta, key(id)
    ** In example below, log isn't saved because the file isn't saved inside /output.
    save_data temp.dta, key(id) replace  						      
    save_data ../output/subfolder/temp.dta, key(id1 id2) replace
    save_data ../output/temp.txt, key(id) outsheet
    save_data temp.csv, key(id) outsheet delim("'")
    save_data temp.dta, key(id) log(file.log) replace log_replace
    save_data temp_nolog.dta, key(id) log(none)
	save_data temp.dta if id<=50, key(id) replace

See also
--------
@save@, @outsheet@

